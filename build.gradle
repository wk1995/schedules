println "schedules gradle start"

if (isModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {

    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        buildFeatures {
            viewBinding true
        }
    }
    signingConfigs {
        release {
            keyAlias 'key-schedules'
            keyPassword 'wk1995'
            storeFile file('/doc/apk_key/wkSchedules.jks')
            storePassword 'wk1995'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            resValue "string", "schedule_name", "@string/schedule_name_release"
            resValue "mipmap", "schedule_icon", "@mipmap/schedule_icon_release"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            //增加包名后缀--关键
            applicationIdSuffix '.debug'
            resValue "string", "schedule_name", "@string/schedule_name_debug"
            resValue "mipmap", "schedule_icon", "@mipmap/schedule_icon_debug"
        }
    }


    kapt {
//        generateStubs = true
        arguments {
            arg("moduleName", project.getName())
        }
    }
    sourceSets {
        main {
            if (isModule.toBoolean()) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    exclude 'com.wk.projects.schedules.module/ScheduleApp'
                }
            }
        }
    }
}

project.afterEvaluate {
    println " schedules evaluate start "
    println " schedules evaluate end "
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(path: ':map-gaode')
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation project(':android_projects_base')
    //时间选择
    implementation 'com.contrarywind:Android-PickerView:4.1.9'
    //请求权限
    kapt "com.github.hotchemi:permissionsdispatcher-processor:${rootProject.permissionsDispatcher}"
    //路由
    kapt "com.alibaba:arouter-compiler:1.1.4"

    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
}
repositories {
    mavenCentral()
}
println "schedules gradle end"
